name: Release Tag
run-name: "${{ github.event_name }}: Release (${{ github.ref_name }})"

on:
  pull_request:
    types: [closed]
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: |
          pip install poetry
          poetry install

      - name: Run Lint
        run: poetry run make lint

      - name: Run Flake8
        run: poetry run make flake

      - name: Run Tests
        run: poetry run make test

  extract-version:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
    steps:
      - name: Extract version from branch
        id: extract_version
        run: |
          BRANCH_NAME="${GITHUB_HEAD_REF:-${GITHUB_REF##*/}}"
          VERSION="${BRANCH_NAME##release/}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

  bump-version:
    runs-on: ubuntu-latest
    needs: [build, extract-version]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Poetry
        run: |
          pip install poetry
          poetry install

      - name: Bump Version
        run: |
          NEW_VERSION="${{ needs.extract-version.outputs.version }}"
          poetry version $NEW_VERSION
          git add pyproject.toml
          git commit -m "Release to $NEW_VERSION"
          git push origin main

  tag-version:
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/')
    runs-on: ubuntu-latest
    needs: [bump-version, extract-version]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Create Git Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          TAG="v${{ needs.extract-version.outputs.version }}"
          git tag -a "$TAG" -m "Release ${{ needs.extract-version.outputs.version }}"
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/adrian-bialy/trading-data-warehouse.git "$TAG"
